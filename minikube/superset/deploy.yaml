apiVersion: v1
kind: Namespace
metadata:
  name: superset

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: superset-config
  namespace: superset
data:
  superset_config.py: |
    import os
    
    # Database configuration
    SQLALCHEMY_DATABASE_URI = 'sqlite:////app/superset_home/superset.db'
    
    # Secret key for sessions
    SECRET_KEY = 'your-secret-key-here-change-in-production'
    
    # Feature flags
    FEATURE_FLAGS = {
        'ENABLE_TEMPLATE_PROCESSING': True,
    }
    
    # Security
    WTF_CSRF_ENABLED = True
    WTF_CSRF_TIME_LIMIT = None
    
    # Cache configuration
    CACHE_CONFIG = {
        'CACHE_TYPE': 'simple',
        'CACHE_DEFAULT_TIMEOUT': 300
    }
    
    # Enable CORS if needed
    ENABLE_CORS = True
    CORS_OPTIONS = {}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: superset
  namespace: superset
  labels:
    app: superset
spec:
  replicas: 1
  selector:
    matchLabels:
      app: superset
  template:
    metadata:
      labels:
        app: superset
    spec:
      containers:
      - name: superset
        image: apache/superset:latest
        ports:
        - containerPort: 8088
        env:
        - name: SUPERSET_CONFIG_PATH
          value: "/app/pythonpath/superset_config.py"
        command: ["/bin/sh"]
        args:
          - "-c"
          - |
            # Install Pinot driver
            pip install pinotdb
            
            # Initialize database
            superset db upgrade
            
            # Create admin user
            superset fab create-admin \
              --username admin \
              --firstname Admin \
              --lastname User \
              --email admin@superset.com \
              --password admin123
            
            # Initialize Superset
            superset init
            
            # Start Superset
            superset run -h 0.0.0.0 -p 8088 --with-threads --reload --debugger
        volumeMounts:
        - name: superset-config
          mountPath: /app/pythonpath
        - name: superset-storage
          mountPath: /app/superset_home
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "1000m"
        readinessProbe:
          httpGet:
            path: /health
            port: 8088
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 5
        livenessProbe:
          httpGet:
            path: /health
            port: 8088
          initialDelaySeconds: 120
          periodSeconds: 30
          timeoutSeconds: 5
      volumes:
      - name: superset-config
        configMap:
          name: superset-config
      - name: superset-storage
        emptyDir: {}

---
apiVersion: v1
kind: Service
metadata:
  name: superset-service
  namespace: superset
  labels:
    app: superset
spec:
  selector:
    app: superset
  ports:
  - port: 8088
    targetPort: 8088
    protocol: TCP
  type: ClusterIP

---
apiVersion: v1
kind: Service
metadata:
  name: superset-nodeport
  namespace: superset
  labels:
    app: superset
spec:
  selector:
    app: superset
  ports:
  - port: 8088
    targetPort: 8088
    nodePort: 30088
    protocol: TCP
  type: NodePort